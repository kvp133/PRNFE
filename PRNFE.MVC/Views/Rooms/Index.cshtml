@model List<PRNFE.MVC.Models.Response.RoomResponse>
@using PRNFE.MVC.Controllers
@{
    ViewData["Title"] = "Quản lý phòng";
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var pageSize = ViewBag.PageSize as int? ?? 10;
    var roomTypes = ViewBag.RoomTypes as List<PRNFE.MVC.Controllers.RoomTypeOption> ?? new List<PRNFE.MVC.Controllers.RoomTypeOption>();
    var roomStatuses = ViewBag.RoomStatuses as List<PRNFE.MVC.Controllers.RoomStatusOption> ?? new List<PRNFE.MVC.Controllers.RoomStatusOption>();
    var isFiltered = ViewBag.IsFiltered as bool? ?? false;
    var filterCount = ViewBag.FilterCount as int? ?? 0;

    // Get current filter values
    var filterRoomTypeId = ViewBag.FilterRoomTypeId?.ToString() ?? "";
    var filterStatus = ViewBag.FilterStatus?.ToString() ?? "";
}

<style>
    .btn-pink {
        background-color: #e91e63 !important;
        color: #fff !important;
        border: none;
    }

        .btn-pink:hover, .btn-pink:focus {
            background-color: #ad1457 !important;
            color: #fff !important;
        }

    .btn-outline-pink {
        color: #e91e63 !important;
        border-color: #e91e63 !important;
        background: #fff !important;
    }

        .btn-outline-pink:hover, .btn-outline-pink:focus {
            color: #fff !important;
            background-color: #e91e63 !important;
            border-color: #e91e63 !important;
        }

    .badge-pink {
        background: #e91e63 !important;
        color: #fff !important;
    }

    .badge-pink-light {
        background: rgba(233,30,99,0.08) !important;
        color: #e91e63 !important;
        border: 1px solid #e91e63 !important;
    }

    .text-pink {
        color: #e91e63 !important;
    }

    .bg-pink-light {
        background: rgba(233,30,99,0.08) !important;
    }

    .room-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid #e91e6322;
    }

        .room-card:hover {
            box-shadow: 0 8px 25px rgba(233,30,99,0.15) !important;
        }

    .room-info {
        font-size: 0.9rem;
    }

    .badge {
        font-size: 0.75rem;
    }

    .filter-card {
        border-left: 4px solid #e91e63;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h4 class="mb-0">
                                <i class="fas fa-home me-2 text-pink"></i>@ViewData["Title"]
                            </h4>
                            <small class="text-muted">
                                @if (isFiltered)
                                {
                                    <span>Tìm thấy: @filterCount phòng</span>
                                }
                                else
                                {
                                    <span>Tổng số: @Model.Count phòng</span>
                                }
                            </small>
                        </div>
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-pink" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
                                <i class="fas fa-filter me-1"></i>Lọc phòng
                            </button>
                            <a href="@Url.Action("Create", "Rooms")" class="btn btn-pink">
                                <i class="fas fa-plus me-1"></i>Thêm phòng mới
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Filter Form -->
            <div class="collapse @(isFiltered ? "show" : "")" id="filterCollapse">
                <div class="card shadow-sm mb-4 filter-card">
                    <div class="card-header bg-pink-light">
                        <h6 class="mb-0 text-pink">
                            <i class="fas fa-search me-2"></i>Bộ lọc tìm kiếm
                        </h6>
                    </div>
                    <div class="card-body">
                        <form method="get" action="@Url.Action("Index", "Rooms")">
                            <input type="hidden" name="isFilter" value="true" />
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label for="roomNumber" class="form-label">Số phòng</label>
                                    <input type="text" class="form-control" id="roomNumber" name="roomNumber"
                                           value="@ViewBag.FilterRoomNumber" placeholder="Nhập số phòng...">
                                </div>
                                <div class="col-md-3">
                                    <label for="floor" class="form-label">Tầng</label>
                                    <input type="number" class="form-control" id="floor" name="floor"
                                           value="@ViewBag.FilterFloor" placeholder="Nhập tầng..." min="1">
                                </div>
                                <div class="col-md-3">
                                    <label for="roomTypeId" class="form-label">Loại phòng</label>
                                    <select class="form-select" id="roomTypeId" name="roomTypeId">
                                        <option value="">-- Tất cả loại phòng --</option>
                                        @foreach (var roomType in roomTypes)
                                        {
                                            var isSelected = filterRoomTypeId == roomType.Id.ToString();
                                            <option value="@roomType.Id" selected="@isSelected">
                                                @roomType.Name
                                            </option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label for="status" class="form-label">Trạng thái</label>
                                    <select class="form-select" id="status" name="status">
                                        <option value="">-- Tất cả trạng thái --</option>
                                        @foreach (var status in roomStatuses)
                                        {
                                            var isSelected = filterStatus == status.Value.ToString();
                                            <option value="@status.Value" selected="@isSelected">
                                                @status.Text
                                            </option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="btn-group">
                                        <button type="submit" class="btn btn-pink">
                                            <i class="fas fa-search me-1"></i>Tìm kiếm
                                        </button>
                                        <a href="@Url.Action("Index", "Rooms")" class="btn btn-outline-pink">
                                            <i class="fas fa-times me-1"></i>Xóa bộ lọc
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(TempData["Message"]?.ToString()))
            {
                <div class="alert @(TempData["IsSuccess"]?.ToString() == "True" ? "alert-success" : "alert-danger") alert-dismissible fade show" role="alert">
                    <i class="fas @(TempData["IsSuccess"]?.ToString() == "True" ? "fa-check-circle" : "fa-exclamation-circle") me-2"></i>
                    @TempData["Message"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Filter Results Info -->
            @if (isFiltered)
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    <strong>Kết quả lọc:</strong> Tìm thấy @filterCount phòng phù hợp với điều kiện tìm kiếm.
                    <a href="@Url.Action("Index", "Rooms")" class="alert-link ms-2">Xem tất cả phòng</a>
                </div>
            }

            <!-- Rooms Grid -->
            @if (Model.Any())
            {
                <div class="row">
                    @foreach (var room in Model)
                    {
                        <div class="col-xl-3 col-lg-4 col-md-6 mb-4">
                            <div class="card h-100 shadow-sm room-card" data-room-id="@room.Id">
                                <div class="card-header bg-pink-light d-flex justify-content-between align-items-center border-pink">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-door-open text-pink me-2"></i>
                                        <strong class="text-pink">@room.RoomNumber</strong>
                                    </div>
                                    <span class="badge badge-pink-light">
                                        @RoomsController.GetRoomStatusText(room.Status)
                                    </span>
                                </div>
                                <div class="card-body">
                                    <div class="row text-center mb-3">
                                        <div class="col-4">
                                            <div class="border-end">
                                                <div class="h6 text-pink mb-1">@room.Floor</div>
                                                <small class="text-muted">Tầng</small>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <div class="border-end">
                                                <div class="h6 text-pink mb-1">@room.Area.ToString("N1")</div>
                                                <small class="text-muted">m²</small>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <div class="h6 text-pink mb-1">@room.MaxOpt</div>
                                            <small class="text-muted">người</small>
                                        </div>
                                    </div>
                                    <div class="room-info">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <small class="text-muted">Tenant ID:</small>
                                            <span class="badge badge-pink-light">@room.TenantId</span>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <small class="text-muted">Loại phòng:</small>
                                            <span class="badge badge-pink-light">
                                                @{
                                                    var roomType = roomTypes.FirstOrDefault(rt => rt.Id == room.RoomTypeId);
                                                    var roomTypeName = roomType?.Name ?? $"#{room.RoomTypeId}";
                                                }
                                                @roomTypeName
                                            </span>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <small class="text-muted">Ngày tạo:</small>
                                            <small>@room.CreateAt.ToString("dd/MM/yyyy")</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer bg-white">
                                    <div class="btn-group w-100">
                                        <a href="@Url.Action("Details", "Rooms", new { id = room.Id })"
                                           class="btn btn-outline-pink btn-sm">
                                            <i class="fas fa-eye"></i> Chi tiết
                                        </a>
                                        <a href="@Url.Action("Edit", "Rooms", new { id = room.Id })"
                                           class="btn btn-outline-pink btn-sm">
                                            <i class="fas fa-edit"></i> Sửa
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-home fa-3x text-muted mb-3"></i>
                        @if (isFiltered)
                        {
                            <h5 class="text-muted">Không tìm thấy phòng nào</h5>
                            <p class="text-muted">Không có phòng nào phù hợp với điều kiện lọc của bạn</p>
                            <a href="@Url.Action("Index", "Rooms")" class="btn btn-outline-pink me-2">
                                <i class="fas fa-list me-1"></i>Xem tất cả phòng
                            </a>
                        }
                        else
                        {
                            <h5 class="text-muted">Chưa có phòng nào</h5>
                            <p class="text-muted">Bắt đầu bằng cách thêm phòng đầu tiên cho tòa nhà</p>
                        }
                        <a href="@Url.Action("Create", "Rooms")" class="btn btn-pink">
                            <i class="fas fa-plus me-1"></i>Thêm phòng mới
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-pink text-white">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i>Xác nhận xóa phòng
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <i class="fas fa-home fa-3x text-pink"></i>
                </div>
                <p class="text-center">Bạn có chắc chắn muốn xóa phòng <strong id="roomNumberToDelete"></strong> không?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Cảnh báo:</strong> Hành động này không thể hoàn tác và sẽ xóa tất cả dữ liệu liên quan đến phòng.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-pink" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i> Hủy bỏ
                </button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-pink">
                        <i class="fas fa-trash me-1"></i> Xóa vĩnh viễn
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(roomId, roomNumber) {
            document.getElementById('roomNumberToDelete').textContent = roomNumber;
            document.getElementById('deleteForm').action = '@Url.Action("Delete", "Rooms")/' + roomId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        // Add hover effects to room cards
        document.addEventListener('DOMContentLoaded', function() {
            const roomCards = document.querySelectorAll('.room-card');
            roomCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px)';
                    this.style.transition = 'transform 0.3s ease';
                });
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });
        });
    </script>
}
