@model dynamic

@if (!string.IsNullOrWhiteSpace(Model?.message))
{
    <script>
        window.onload = function () {
            showToast("@Model.message", "@Model.type");
        }
    </script>
}

<div id="toast-container" class="position-fixed top-0 end-0 p-3" style="z-index: 1080;"></div>

<style>
    .toast-custom {
        min-width: 280px;
        border-radius: 0.5rem;
        box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15);
    }

    .toast-success {
        background-color: #198754;
        color: #fff;
    }

    .toast-error {
        background-color: #dc3545;
        color: #fff;
    }

    .toast-warning {
        background-color: #ffc107;
        color: #212529;
    }
</style>

<script>
    function showToast(message, type = 'success') {
        const toastId = `toast-${Date.now()}`;
        let toastClass = 'toast-success';
        if (type === 'error') toastClass = 'toast-error';
        else if (type === 'warning') toastClass = 'toast-warning';

        const toastHTML = `
            <div id="${toastId}" class="toast align-items-center ${toastClass} toast-custom show" role="alert">
                <div class="d-flex justify-content-between align-items-center px-3 py-2">
                    <div>${message}</div>
                    <button type="button" class="btn-close btn-close-white ms-2" onclick="document.getElementById('${toastId}').remove()" aria-label="Close"></button>
                </div>
            </div>
        `;
        document.getElementById("toast-container").insertAdjacentHTML("beforeend", toastHTML);
        setTimeout(() => {
            const el = document.getElementById(toastId);
            if (el) el.remove();
        }, 4000);
    }
</script>
