@model IEnumerable<PRNFE.MVC.Models.Response.NotificationResponse>

@{
    ViewData["Title"] = "Index";
    var filtermodel = (FilterNotificationRequest)ViewBag.FilterModel;
}



@Html.Partial("_Filter", filtermodel)


<div class="container-fluid pe-2 my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="fw-bold text-danger">Danh sách thông báo</h4>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle me-1"></i> Create New
        </a>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Id)</th>
                        <th>@Html.DisplayNameFor(model => model.Title)</th>
                        <th>@Html.DisplayNameFor(model => model.Content)</th>
                        <th>@Html.DisplayNameFor(model => model.TypeTarget)</th>
                        <th>@Html.DisplayNameFor(model => model.PublishDate)</th>
                        <th>@Html.DisplayNameFor(model => model.Status)</th>
                        <th>@Html.DisplayNameFor(model => model.CreateAt)</th>
                        <th>@Html.DisplayNameFor(model => model.UpdatedAt)</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Id)</td>
                            <td class="truncate-chars">@Html.DisplayFor(modelItem => item.Title)</td>
                            <td class="truncate-chars">@Html.DisplayFor(modelItem => item.Content)</td>
                            <td>@Enum.GetName(typeof(NotificationResponse.NotificationTypeTarget), item.TypeTarget)</td>
                            <td>@Html.DisplayFor(modelItem => item.PublishDate)</td>
                            <td>@Enum.GetName(typeof(NotificationResponse.NotificationStatus), item.Status)</td>
                            <td>@Html.DisplayFor(modelItem => item.CreateAt)</td>
                            <td>@Html.DisplayFor(modelItem => item.UpdatedAt)</td>
                            <td class="text-nowrap text-center">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                                    <i class="bi bi-pencil-square"></i>
                                </a>

                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary me-1" title="Details">
                                    <i class="bi bi-info-circle"></i>
                                </a>

                                <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this item?');">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-outline-danger me-1" title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                                @if(item.Status > 0 ){
                                    <form asp-action="Push" asp-route-id="@item.Id" method="post" class="d-inline sendNotificationForm">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-sm btn-outline-success me-1" title="Push">
                                            <i class="bi bi-send-fill"></i>
                                        </button>
                                    </form>
                                }

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    .truncate-chars {
        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

@section Scripts {

    <script>
        $(document).ready(function () {
            $(".sendNotificationForm").on("submit", function (e) {
                e.preventDefault(); // prevent normal form submission

                var form = $(this);
                var id = form.find("button[type='submit']").data("id");

                // Extract the AntiForgeryToken from form
                var token = form.find('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: form.attr("action"),
                    method: "POST",
                    headers: {
                        'RequestVerificationToken': token
                    },
                    data: {
                        __RequestVerificationToken: token,
                        id: id
                    },
                    success: function (res) {
                        alert("Gửi thông báo thành công!");
                        console.log(res);
                    },
                    error: function (xhr, status, err) {
                        console.error(err);
                        alert("Lỗi khi gửi thông báo.");
                    }
                });
            });
        });
    </script>
}

