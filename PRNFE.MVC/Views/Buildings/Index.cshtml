@model List<PRNFE.MVC.Models.Response.BuildingResponse>
@{
    ViewData["Title"] = "Quản lý tòa nhà";
    var buildings = ViewBag.Buildings as List<PRNFE.MVC.Models.Response.BuildingResponse> ?? new List<PRNFE.MVC.Models.Response.BuildingResponse>();
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var pageSize = ViewBag.PageSize as int? ?? 10;
    var sortBy = ViewBag.SortBy as string ?? "Name";
    var sortOrder = ViewBag.SortOrder as string ?? "asc";
}

<style>
    .btn-pink {
        background-color: #e91e63 !important;
        color: #fff !important;
        border: none;
    }

        .btn-pink:hover, .btn-pink:focus {
            background-color: #ad1457 !important;
            color: #fff !important;
        }

    .btn-outline-pink {
        color: #e91e63 !important;
        border-color: #e91e63 !important;
        background: #fff !important;
    }

        .btn-outline-pink:hover, .btn-outline-pink:focus {
            color: #fff !important;
            background-color: #e91e63 !important;
            border-color: #e91e63 !important;
        }

    .text-pink {
        color: #e91e63 !important;
    }

    .bg-pink-light {
        background: rgba(233,30,99,0.08) !important;
    }

    .building-card {
        transition: all 0.3s ease;
        border: 1px solid #e9ecef;
    }

        .building-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-pink text-Black">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">
                            <i class="fas fa-building me-2"></i>@ViewData["Title"]
                        </h4>
                        <div class="btn-group">
                            <a href="@Url.Action("Create", "Buildings")" class="btn btn-outline-light">
                                <i class="fas fa-plus me-1"></i>Thêm tòa nhà
                            </a>
                            <a href="@Url.Action("Filter", "Buildings")" class="btn btn-outline-light">
                                <i class="fas fa-filter me-1"></i>Lọc
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            @* @if (!string.IsNullOrEmpty(TempData["Message"]?.ToString())) *@
            @* { *@
            @*     <div class="alert @(TempData["IsSuccess"]?.ToString() == "True" ? "alert-success" : "alert-danger") alert-dismissible fade show" role="alert"> *@
            @*         <i class="fas @(TempData["IsSuccess"]?.ToString() == "True" ? "fa-check-circle" : "fa-exclamation-circle") me-2"></i> *@
            @*         @TempData["Message"] *@
            @*         <button type="button" class="btn-close" data-bs-dismiss="alert"></button> *@
            @*     </div> *@
            @* } *@

            <!-- Buildings Grid -->
            <div class="row">
                @if (buildings.Any())
                {
                    @foreach (var building in buildings)
                    {
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card building-card h-100">
                                <div class="card-header bg-pink-light">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0 text-pink">@building.Name</h5>
                                        <span class="badge bg-@PRNFE.MVC.Controllers.BuildingsController.GetBuildingStatusColor(building.IsActive)">
                                            @PRNFE.MVC.Controllers.BuildingsController.GetBuildingStatusText(building.IsActive)
                                        </span>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-3">
                                        <div class="col-6">
                                            <small class="text-muted">Địa chỉ:</small><br>
                                            <strong>@(string.IsNullOrEmpty(building.Address) ? "Chưa có" : building.Address)</strong>
                                        </div>
                                        <div class="col-6">
                                            <small class="text-muted">Ngày tạo:</small><br>
                                            <strong>@building.CreateAt.ToString("dd/MM/yyyy")</strong>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-6">
                                            <small class="text-muted">Số tầng:</small><br>
                                            <span class="badge bg-info">@building.NumberOfFloors tầng</span>
                                        </div>
                                        <div class="col-6">
                                            <small class="text-muted">Số căn hộ:</small><br>
                                            <span class="badge bg-primary">@building.NumberOfApartments căn</span>
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(building.Description))
                                    {
                                        <div class="mb-3">
                                            <small class="text-muted">Mô tả:</small><br>
                                            <p class="small">@(building.Description.Length > 100 ? building.Description.Substring(0, 100) + "..." : building.Description)</p>
                                        </div>
                                    }
                                </div>
                                <div class="card-footer bg-transparent">
                                    <div class="btn-group w-100">
                                        <a href="@Url.Action("Details", "Buildings", new { id = building.Id })" class="btn btn-outline-pink btn-sm">
                                            <i class="fas fa-eye me-1"></i>Chi tiết
                                        </a>
                                        <a href="@Url.Action("Edit", "Buildings", new { id = building.Id })" class="btn btn-outline-pink btn-sm">
                                            <i class="fas fa-edit me-1"></i>Sửa
                                        </a>
                                       
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="text-center py-5">
                            <i class="fas fa-building fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Chưa có tòa nhà nào</h5>
                            <p class="text-muted">Hãy thêm tòa nhà đầu tiên của bạn</p>
                            <a href="@Url.Action("Create", "Buildings")" class="btn btn-pink">
                                <i class="fas fa-plus me-2"></i>Thêm tòa nhà
                            </a>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @*
            @if (buildings.Any())
            {
                <nav aria-label="Building pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, size = pageSize, sortBy = sortBy, sortOrder = sortOrder })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(currentPage + 2, currentPage + 5); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, size = pageSize, sortBy = sortBy, sortOrder = sortOrder })">@i</a>
                            </li>
                        }
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, size = pageSize, sortBy = sortBy, sortOrder = sortOrder })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }*@
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa tòa nhà <strong id="buildingName"></strong>?</p>
                <p class="text-danger small">Hành động này không thể hoàn tác!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Hủy</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(buildingId, buildingName) {
            document.getElementById('buildingName').textContent = buildingName;
            document.getElementById('deleteForm').action = '@Url.Action("Delete", "Buildings")/' + buildingId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }
    </script>
}
