@using Newtonsoft.Json
@using PRNFE.MVC.Helper
@using static PRNFE.MVC.Controllers.TemporaryStaysController
@model IEnumerable<PRNFE.MVC.Models.Response.TemporaryStayResponse>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "TemporaryStay";
    var cookieValue = HttpContextAccessor.HttpContext?.Request.Cookies["AccessToken"];
    var json = TempData["FilterModel"]?.ToString();
    var filtermodel = JsonConvert.DeserializeObject<FilterTemporaryStayDto>(json ?? "{}");
    var pagination = (Pagination)ViewBag.Total;
    TempData.Keep("FilterModel");
}

<h1>TemporaryStay</h1>

@Html.Partial("_Filter", filtermodel)

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Resident.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FromDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ToDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Note)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    @if(Model != null && Model.Any()){
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Resident.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FromDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ToDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>

                        @Enum.GetName(typeof(TemporaryStayResponse.TemporaryStayStatus), item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateAt)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdatedAt)
                    </td>
                    <td>
                        @if (JwtTokenHelper.IsLandlord(cookieValue))
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn" })
                        }
                        @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn" })
                    </td>
                </tr>
            }
        </tbody>
    }
    else{
        <p>Không có dữ liệu</p>
    }
    
</table>
<nav>
    <ul class="pagination justify-content-center">
        <li class="page-item @(pagination.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" as asp-action="Index" asp-route-page="@(pagination.PageNumber - 1)">Previous</a>
        </li>

        @for (int i = 1; i <= pagination.TotalPages; i++)
        {
            <li class="page-item @(pagination.PageNumber == i ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }

        <li class="page-item @(pagination.PageNumber == pagination.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(pagination.PageNumber + 1)">Next</a>
        </li>
    </ul>
</nav>

<style>
    body {
        background-color: #ffe6f0; /* soft pink */
        font-family: 'Segoe UI', sans-serif;
    }

    h1 {
        color: #99004d; /* deep rose */
    }

    .table {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

        .table th {
            background-color: #ffccde;
            color: #660033;
            padding: 12px;
            text-align: left;
        }

        .table td {
            padding: 10px;
            border-bottom: 1px solid #f0b6c7;
            color: #333;
        }

        .table tr:hover {
            background-color: #fff0f5;
        }

    a {
        color: #cc005f;
        text-decoration: none;
        font-weight: 500;
    }

        a:hover {
            text-decoration: underline;
        }

    .btn {
        background-color: #cc005f;
        color: #fff;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
    }

        .btn:hover {
            background-color: #99004d;
        }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#filterTempoForm").on("reset", function (e) {
                fetch("/TemporaryStays/ClearFilterTempData", {
                    method: "POST"
                }).then(() => {
                    window.location.href = "/TemporaryStays/Index";
                });
            });
        });
    </script>
}

