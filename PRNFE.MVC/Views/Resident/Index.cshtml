@model PRNFE.MVC.Models.Response.ResidentFilterResponse
@using PRNFE.MVC.Models.Request

@{
    ViewData["Title"] = "Danh sách cư dân";
    var filter = ViewBag.Filter as ResidentFilterRequest ?? new ResidentFilterRequest();
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-gradient-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-users me-2"></i>
                            Danh sách cư dân (@(Model?.Count ?? 0))
                        </h5>
                        <div>
                            <a href="@Url.Action("Create", "Resident")" class="btn btn-light btn-sm">
                                <i class="fas fa-plus me-1"></i>
                                Thêm cư dân mới
                            </a>
                            <a href="/" class="btn btn-outline-light btn-sm">
                                <i class="fas fa-home me-1"></i>
                                Trang chủ
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Search Form -->
                    <form method="get" asp-action="Index" class="mb-4">
                        <div class="row g-3">
                            <div class="col-md-2">
                                <label for="BuildingId" class="form-label">Tòa nhà</label>
                                <select name="BuildingId" class="form-select" id="BuildingId">
                                    <option value="1" selected="@(filter.BuildingId == 1)">Tòa A</option>
                                    <option value="2" selected="@(filter.BuildingId == 2)">Tòa B</option>
                                    <option value="3" selected="@(filter.BuildingId == 3)">Tòa C</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="FullName" class="form-label">Họ tên</label>
                                <input type="text" name="FullName" class="form-control" id="FullName"
                                       value="@filter.FullName" placeholder="Nhập họ tên...">
                            </div>
                            <div class="col-md-2">
                                <label for="PhoneNumber" class="form-label">Số điện thoại</label>
                                <input type="text" name="PhoneNumber" class="form-control" id="PhoneNumber"
                                       value="@filter.PhoneNumber" placeholder="Nhập SĐT...">
                            </div>
                            <div class="col-md-2">
                                <label for="RoomNumber" class="form-label">Số phòng</label>
                                <input type="text" name="RoomNumber" class="form-control" id="RoomNumber"
                                       value="@filter.RoomNumber" placeholder="Nhập số phòng...">
                            </div>
                            <div class="col-md-1">
                                <label for="PageSize" class="form-label">Hiển thị</label>
                                <select name="PageSize" class="form-select" id="PageSize">
                                    <option value="10" selected="@(filter.PageSize == 10)">10</option>
                                    <option value="25" selected="@(filter.PageSize == 25)">25</option>
                                    <option value="50" selected="@(filter.PageSize == 50)">50</option>
                                    <option value="100" selected="@(filter.PageSize == 100)">100</option>
                                </select>
                            </div>
                            <div class="col-md-2 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary me-2">
                                    <i class="fas fa-search me-1"></i>Tìm kiếm
                                </button>
                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                    <i class="fas fa-refresh me-1"></i>Reset
                                </a>
                            </div>
                        </div>
                        <input type="hidden" name="Page" value="@filter.Page" />
                    </form>

                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show">
                            <i class="fas fa-check-circle me-2"></i>
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (ViewBag.Error != null)
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @ViewBag.Error
                        </div>
                    }

                    <!-- Results Summary -->
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div class="text-muted">
                            @if (Model != null && Model.Any())
                            {
                                <span>Hiển thị @Model.Count cư dân</span>
                            }
                            else
                            {
                                <span>Không tìm thấy cư dân nào</span>
                            }
                        </div>
                    </div>

                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th><i class="fas fa-hashtag me-1"></i>ID</th>
                                        <th><i class="fas fa-user me-1"></i>Họ tên</th>
                                        <th><i class="fas fa-phone me-1"></i>Điện thoại</th>
                                        <th><i class="fas fa-envelope me-1"></i>Email</th>
                                        <th><i class="fas fa-calendar me-1"></i>Ngày sinh</th>
                                        <th><i class="fas fa-venus-mars me-1"></i>Giới tính</th>
                                        <th><i class="fas fa-map-marker-alt me-1"></i>Địa chỉ</th>
                                        <th><i class="fas fa-calendar-plus me-1"></i>Ngày tạo</th>
                                        <th><i class="fas fa-tools me-1"></i>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var resident in Model)
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-primary">#@resident.Id</span>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-sm bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-2">
                                                        @(resident.FullName?.Length > 0 ? resident.FullName.Substring(0, 1).ToUpper() : "?")
                                                    </div>
                                                    <div>
                                                        <strong>@resident.FullName</strong>
                                                        <br>
                                                        <small class="text-muted">User ID: @resident.UserId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <a href="tel:@resident.PhoneNumber" class="text-decoration-none">
                                                    <i class="fas fa-phone me-1"></i>
                                                    @resident.PhoneNumber
                                                </a>
                                            </td>
                                            <td>
                                                <a href="mailto:@resident.Email" class="text-decoration-none">
                                                    @resident.Email
                                                </a>
                                            </td>
                                            <td>@resident.DateOfBirth.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <span class="badge @(resident.Gender ? "bg-primary" : "bg-pink")">
                                                    @(resident.Gender ? "Nam" : "Nữ")
                                                </span>
                                            </td>
                                            <td>
                                                <span title="@resident.Address">
                                                    @(resident.Address?.Length > 30 ? resident.Address.Substring(0, 30) + "..." : resident.Address)
                                                </span>
                                            </td>
                                            <td>@resident.CreateAt.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <div class="btn-group btn-group-sm">
                                                    <a href="@Url.Action("Details", "Resident", new { id = resident.Id })"
                                                       class="btn btn-outline-info" title="Xem chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", "Resident", new { id = resident.Id })"
                                                       class="btn btn-outline-primary" title="Sửa">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button class="btn btn-outline-danger"
                                                            onclick="deleteResident(@resident.Id, '@resident.FullName')"
                                                            title="Xóa">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Simple Pagination Controls -->
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div>
                                @if (filter.Page > 1)
                                {
                                    <a href="@GetPageUrl(filter.Page - 1, filter)" class="btn btn-outline-primary">
                                        <i class="fas fa-chevron-left me-1"></i>Trang trước
                                    </a>
                                }
                            </div>
                            <div>
                                <span class="text-muted">Trang @filter.Page</span>
                            </div>
                            <div>
                                @if (Model.Count == filter.PageSize)
                                {
                                    <a href="@GetPageUrl(filter.Page + 1, filter)" class="btn btn-outline-primary">
                                        Trang sau<i class="fas fa-chevron-right ms-1"></i>
                                    </a>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Không tìm thấy cư dân nào</h5>
                            <p class="text-muted">Hãy thử thay đổi bộ lọc hoặc thêm cư dân mới.</p>
                            <a href="@Url.Action("Create", "Resident")" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i>
                                Thêm cư dân mới
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle text-warning me-2"></i>
                    Xác nhận xóa
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa cư dân <strong id="residentName"></strong> không?</p>
                <p class="text-muted small">Hành động này không thể hoàn tác và sẽ xóa tất cả thông tin liên quan.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>
                        Xóa
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetPageUrl(int page, ResidentFilterRequest filterRequest)
    {
        var routeValues = new RouteValueDictionary
        {
            ["BuildingId"] = filterRequest.BuildingId,
            ["Page"] = page,
            ["PageSize"] = filterRequest.PageSize
        };

        if (!string.IsNullOrWhiteSpace(filterRequest.FullName))
            routeValues["FullName"] = filterRequest.FullName;

        if (!string.IsNullOrWhiteSpace(filterRequest.PhoneNumber))
            routeValues["PhoneNumber"] = filterRequest.PhoneNumber;

        if (!string.IsNullOrWhiteSpace(filterRequest.RoomNumber))
            routeValues["RoomNumber"] = filterRequest.RoomNumber;

        return Url.Action("Index", routeValues);
    }
}

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #ec4899, #8b5cf6) !important;
    }

    .bg-pink {
        background-color: #ec4899 !important;
    }

    .card {
        border-radius: 15px;
        border: none;
    }

    .card-header {
        border-radius: 15px 15px 0 0 !important;
    }

    .table th {
        border-top: none;
        font-weight: 600;
        color: #374151;
    }

    .btn-group-sm .btn {
        padding: 0.25rem 0.5rem;
    }

    .avatar-sm {
        width: 32px;
        height: 32px;
        font-size: 14px;
        font-weight: 600;
    }

    .pagination .page-link {
        color: #6c757d;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
</style>

@section Scripts {
    <script>
        function deleteResident(residentId, residentName) {
            document.getElementById('residentName').textContent = residentName;
            document.getElementById('deleteForm').action = '@Url.Action("Delete", "Resident")/' + residentId;

            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        // Auto-hide alerts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                var alerts = document.querySelectorAll('.alert');
                alerts.forEach(function(alert) {
                    var bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
        });

        // Auto-submit form when PageSize changes
        document.getElementById('PageSize').addEventListener('change', function() {
            this.form.submit();
        });
    </script>
}
